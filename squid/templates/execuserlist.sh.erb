#!/bin/sh
#
# execuserlist.sh - example script by URLfilterDB
# RCS: $Id: execuserlist.sh,v 1.1 2013/01/22 00:36:51 root Exp root $
#
# Example script called by execuserlist to generate a list of users.
# This example uses ldapsearch to generate a list of usernames.
#
# ufdbguardd only parses stdout, so anything sent to stderr is lost.
# The author of the script should decide what to do with stderr.
# It is suggested to send stderr to a logfile and only remove the logfile at
# the end of the script if it is empty.
#
# During initialisation ufdbguardd waits for the completion of scripts defined by 
# "execuserlist" so make sure that the script does not hang or takes a 
# long time to execute.
# ufdbGuard executes the scripts defined by execuserlist every N minutes
# where N is between 5 and 1440. N defaults to 15 and can be set by
# the parameter 'refreshuserlist'.
#
# The configuration file of ufdbguardd may contain source definitions
# like
#    source {
#       execuserlist "/local/ufdbguardd/bin/getgroupmembers-ldap finance"
#    }
# so we can receive parameters in $1, $2, ...
# In the above example $1 has the value "finance".
# So if we receive a parameter we use it in the LDAP search, otherwise we search for OU=people.
LDAP_CN=${1:-people}

# send stderr to a logfile:
LOGFILE=/tmp/execuserlist.stderr.$$.log
exec 2> $LOGFILE

# If necessary, set the PATH
# PATH=/my/path/bin:$PATH
# export PATH

# Generate a list of usernames, one username per line.

# LDAP_PASSWORD="secret"
LDAP_URI="<%= @ldap_uri %>"
LDAP_SEARCHBASE="<%= @ldap_search_base %>"
LDAP_ATTRS="memberUid"

ldapsearch -LLL -x -H "$LDAP_URI" -b "$LDAP_SEARCHBASE" cn=${LDAP_CN} "$LDAP_ATTRS"  |   \
grep $LDAP_ATTRS | \
sed -e "s,^$LDAP_ATTRS: ,," #| \
#sed -e "s,@.*$,,"



# remove the logfile if it is empty, otherwise send a comment about it to ufdbguardd
if test -s $LOGFILE
then
   echo "# logfile $LOGFILE has content and is not removed"
else
   rm -f $LOGFILE
fi

exit 0

